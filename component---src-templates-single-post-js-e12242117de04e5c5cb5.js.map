{"version":3,"sources":["webpack:///./helpers.js","webpack:///./node_modules/simple-icons/icons/github.js","webpack:///./src/components/tags.js","webpack:///./src/templates/single-post.js"],"names":["module","exports","kebabCase","string","result","replace","match","substr","toLowerCase","title","slug","svg","this","source","hex","Tags","tags","className","map","tag","key","to","itemProp","require","BlogPostTemplate","data","pageContext","location","post","markdownRemark","otherPosts","morePosts","nodes","siteTitle","site","siteMetadata","previous","next","date","frontmatter","update","Article","itemScope","itemType","dangerouslySetInnerHTML","__html","html","Footer","length","i","fields","PostNav","PostLink","link","linkText","rel","description","excerpt","pageQuery"],"mappings":"4EAqBAA,EAAOC,QAAU,CACfC,UAtBF,SAAmBC,GACjB,IAAIC,EAASD,EAgBb,OAFAC,GAHAA,GAHAA,GALAA,EAASA,EAAOC,QAAQ,iBAAiB,SAAUC,GACjD,OAAOA,EAAMC,OAAO,EAAG,GAAK,IAAMD,EAAMC,OAAO,EAAG,GAAGC,kBAIvCA,eAGAH,QAAQ,eAAgB,MAGxBA,QAAQ,MAAO,IAAIA,QAAQ,MAAO,O,0CCfpDL,EAAOC,QAAU,CACfQ,MAAO,SACPC,KAAM,SACNC,IAAK,8zBAEL,WACE,OAAOC,KAAKD,IAAIL,MAAM,sBAAsB,IAG9CO,OAAQ,2BACRC,IAAK,W,oCCVP,2DAsBeC,IAjBf,YAA0B,IAATC,EAAQ,EAARA,KACf,OACE,yBAAKC,UAAU,QACb,wBAAIA,UAAU,WAAd,eAEA,4BACGD,EAAKE,KAAI,SAAAC,GAAG,OACX,wBAAIC,IAAKlB,oBAAUiB,IACjB,kBAAC,IAAD,CAAME,GAAE,SAAWnB,oBAAUiB,GAAQG,SAAS,OAC5C,0BAAMA,SAAS,YAAYH,Y,kCCdzC,oIAOaI,EAAQ,QA4FNC,UA1FU,SAAC,GAAqC,IAAD,EAAlCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOH,EAAKI,eACZC,EAAaL,EAAKM,UAAUC,MAC5BC,GAAY,UAAAR,EAAKS,KAAKC,oBAAV,eAAwB1B,QAAS,QAC3C2B,EAAyBV,EAAzBU,SAAUC,EAAeX,EAAfW,KAAMrB,EAASU,EAATV,KAClBsB,EAAOV,EAAKW,YAAYD,KACxBE,EAASZ,EAAKW,YAAYC,OAE1BC,EAAU,WACd,OACE,6BACExB,UAAU,YACVyB,WAAS,EACTC,SAAS,6BAGT,gCACE,wBAAIrB,SAAS,YAAYM,EAAKW,YAAY9B,OACzC6B,GAAQ,2BAAOrB,UAAU,QAAO,yCAAxB,IAA2CqB,GACnDE,GAAU,2BAAOvB,UAAU,eAAc,0CAA/B,IAAmDuB,IAGhE,6BACEI,wBAAyB,CAAEC,OAAQjB,EAAKkB,MACxCxB,SAAS,kBAOXyB,EAAS,WACb,OACE,gCACE,kBAAC,IAAD,CAAM/B,KAAMA,IAEZ,yBAAKC,UAAU,iBACb,8CACCa,EAAWkB,OACRlB,EAAWZ,KAAI,SAACU,EAAMqB,GAAP,OACf,kBAAC,IAAD,CAAM7B,IAAK6B,EAAG5B,GAAIO,EAAKsB,OAAOxC,MAAOkB,EAAKW,YAAY9B,UACtD,kDAQN0C,EAAU,WACd,IAAMC,EAAW,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,IACjC,OACEF,GACE,4BACE,8BAAOC,EAAP,KACA,kBAAC,IAAD,CAAMjC,GAAIgC,EAAKH,OAAOxC,KAAM6C,IAAKA,GAC9BF,EAAKd,YAAY9B,SAO5B,OACE,yBAAKQ,UAAU,iBACb,4BACE,kBAACmC,EAAD,CAAUC,KAAMjB,EAAUkB,SAAS,iBAAiBC,IAAI,SACxD,kBAACH,EAAD,CAAUC,KAAMhB,EAAMiB,SAAS,aAAaC,IAAI,YAMxD,OACE,kBAAC,IAAD,CAAQ5B,SAAUA,EAAUlB,MAAOwB,EAAWhB,UAAU,eACtD,kBAAC,IAAD,CACER,MAAOmB,EAAKW,YAAY9B,MACxB+C,YAAa5B,EAAKW,YAAYiB,aAAe5B,EAAK6B,UAEpD,yBAAKxC,UAAU,QACb,kBAACwB,EAAD,MACA,6BACA,kBAACM,EAAD,MACA,6BACA,kBAACI,EAAD,SAQD,IAAMO,EAAS,c","file":"component---src-templates-single-post-js-e12242117de04e5c5cb5.js","sourcesContent":["function kebabCase(string) {\n  var result = string;\n\n  // Convert camelCase capitals to kebab-case.\n  result = result.replace(/([a-z][A-Z])/g, function (match) {\n    return match.substr(0, 1) + '-' + match.substr(1, 1).toLowerCase();\n  });\n\n  // Convert non-camelCase capitals to lowercase.\n  result = result.toLowerCase();\n\n  // Convert non-alphanumeric characters to hyphens\n  result = result.replace(/[^-a-z0-9]+/g, '-');\n\n  // Remove hyphens from both ends\n  result = result.replace(/^-+/, '').replace(/-+$/, '');\n\n  return result;\n}\n\n\nmodule.exports = {\n  kebabCase\n};","module.exports = {\n  title: \"GitHub\",\n  slug: \"github\",\n  svg: '<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>GitHub icon</title><path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"/></svg>',\n\n  get path() {\n    return this.svg.match(/<path\\s+d=\"([^\"]*)/)[1];\n  },\n\n  source: \"https://github.com/logos\",\n  hex: \"181717\"\n};","import React from 'react';\nimport { Link } from 'gatsby';\nimport { kebabCase } from '../../helpers';\nimport '../styles/components/tags.scss';\n\nfunction Tags ({ tags }) {\n  return (\n    <div className=\"tags\">\n      <h3 className=\"heading\">Categories:</h3>\n\n      <ul>\n        {tags.map(tag =>\n          <li key={kebabCase(tag)}>\n            <Link to={`/tags/${kebabCase(tag)}`} itemProp=\"url\">\n              <span itemProp=\"headline\">{tag}</span>\n            </Link>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n}\nexport default Tags;","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Tags from '../components/tags';\nimport '../styles/templates/singlepost.scss';\n\nconst icon = require('simple-icons/icons/github');\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark;\n  const otherPosts = data.morePosts.nodes;\n  const siteTitle = data.site.siteMetadata?.title || 'Title';\n  const { previous, next, tags } = pageContext;\n  const date = post.frontmatter.date;\n  const update = post.frontmatter.update;\n\n  const Article = () => {\n    return (\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          {date && <small className=\"date\"><b>Posted on:</b> {date}</small>}\n          {update && <small className=\"date update\"><b>Updated on:</b> {update}</small>}\n        </header>\n\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n\n      </article>\n    );\n  }\n\n  const Footer = () => {\n    return(\n      <footer>\n        <Tags tags={tags} />\n\n        <div className=\"related-posts\">\n          <h3>Similar posts:</h3>\n          {otherPosts.length\n            ? otherPosts.map((post, i) =>\n              <Link key={i} to={post.fields.slug}>{post.frontmatter.title}</Link>)\n            : <p>No related posts</p>\n          }\n        </div>\n\n      </footer>\n    );\n  }\n\n  const PostNav = () => {\n    const PostLink = ({link, linkText, rel}) => {\n      return (\n        link && (\n          <li>\n            <span>{linkText} </span>\n            <Link to={link.fields.slug} rel={rel} >\n              {link.frontmatter.title}\n            </Link>\n          </li>\n        )\n      );\n    }\n\n    return(\n      <nav className=\"blog-post-nav\">\n        <ul>\n          <PostLink link={previous} linkText=\"Previous post:\" rel=\"prev\" />\n          <PostLink link={next} linkText=\"Next post:\" rel=\"next\" />\n        </ul>\n      </nav>\n    );\n  }\n\n  return (\n    <Layout location={location} title={siteTitle} className=\"single-post\">\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <div className=\"post\">\n        <Article />\n        <hr />\n        <Footer />\n        <hr />\n        <PostNav />\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        update(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    morePosts: allMarkdownRemark(\n      filter: {\n        fields: { slug: { ne: $slug } }\n      }\n      limit: 5\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n        }\n      }\n    }\n  }\n`\n\n// Add:\n// $tag: [String] to BlogPostBySlug variables\n// frontmatter: { tags: { ne: \"Projects\", in: $tag } } to morePosts filter to remove projects from the listing"],"sourceRoot":""}