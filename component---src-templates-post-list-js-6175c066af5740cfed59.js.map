{"version":3,"sources":["webpack:///./src/templates/post-list.js","webpack:///./helpers.js","webpack:///./src/components/Pagination.js","webpack:///./src/components/tags.js","webpack:///./src/components/Posts.js"],"names":["BlogList","data","pageContext","location","siteTitle","site","siteMetadata","title","currentPage","numPages","isFirst","isLast","prevPage","nextPage","posts","allMarkdownRemark","nodes","tags","group","map","tag","fieldValue","className","postData","link","pageQuery","module","exports","kebabCase","string","result","replace","match","substr","toLowerCase","Pagination","to","rel","Array","from","i","key","Tags","itemProp","Posts","post","frontmatter","fields","slug","itemScope","itemType","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"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","file":"component---src-templates-post-list-js-6175c066af5740cfed59.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Posts from '../components/Posts';\nimport Tags from '../components/tags';\nimport Pagination from '../components/Pagination';\nimport '../styles/templates/postlist.scss';\n\nconst BlogList = ({ data, pageContext, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || 'Title';\n  const { currentPage, numPages } = pageContext;\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage = currentPage - 1 === 1 ? '/blog' : `/blog/${currentPage - 1}`;\n  const nextPage = `/blog/${currentPage + 1}`;\n  const posts = data.allMarkdownRemark.nodes;\n  const tags = data.tags.group.map(tag => tag.fieldValue);\n\n  return (\n    <Layout location={location} title={siteTitle} className=\"post-list\">\n      <SEO title=\"Blog\" />\n      <h1>Posts</h1>\n      <Tags tags={tags} />\n      <Posts postData={posts} />\n      <Pagination\n        isFirst={isFirst}\n        isLast={isLast}\n        prevPage={prevPage}\n        nextPage={nextPage}\n        numPages={numPages}\n        currentPage={currentPage}\n        link=\"/blog/\"\n      />\n    </Layout>\n  )\n}\n\nexport default BlogList;\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: {\n        isFuture: { eq: false }\n        frontmatter: { tags: { nin: [\"Projects\"] } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          tags\n        }\n      }\n    }\n    tags: allMarkdownRemark(\n      filter: { isFuture: { eq: false } }\n        limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n      }\n    }\n  }\n`;","function kebabCase(string) {\n  var result = string;\n\n  // Convert camelCase capitals to kebab-case.\n  result = result.replace(/([a-z][A-Z])/g, function (match) {\n    return match.substr(0, 1) + '-' + match.substr(1, 1).toLowerCase();\n  });\n\n  // Convert non-camelCase capitals to lowercase.\n  result = result.toLowerCase();\n\n  // Convert non-alphanumeric characters to hyphens\n  result = result.replace(/[^-a-z0-9]+/g, '-');\n\n  // Remove hyphens from both ends\n  result = result.replace(/^-+/, '').replace(/-+$/, '');\n\n  return result;\n}\n\n\nmodule.exports = {\n  kebabCase\n};","import React from 'react';\nimport { Link } from 'gatsby';\nimport '../styles/components/pagination.scss';\n\nfunction Pagination ({ isFirst, isLast, prevPage, nextPage, numPages, currentPage, link }) {\n  return (\n    <div className=\"pagination\">\n      {!isFirst && (\n        <Link className=\"previous\" to={prevPage} rel=\"prev\">\n          Previous\n        </Link>\n      )}\n\n      <div className=\"num-wrap\">\n        {currentPage > 2 &&\n          <Link to={`${link}`}>\n            1{currentPage > 3 && '..'}\n          </Link>}\n\n        {numPages > 1 && Array.from([ -1, 0, 1 ], i => {\n          if (currentPage + i < 1) {\n            return;\n          } else if (currentPage + i > numPages) {\n            return;\n          } else {\n            return(\n              <Link\n                className={i === 0 ? 'active' : ''}\n                key={`pagination-number${i + 1}`}\n                to={`${link}${currentPage + i === 1 ? '' : currentPage + i}`}\n              >\n                {currentPage + i}\n              </Link>\n            );\n          }\n        })}\n\n        {currentPage < numPages - 1 &&\n          <Link to={`${link}${numPages}`}>\n            {numPages - 1 != currentPage + 1 && '..'}{numPages}\n          </Link>}\n      </div>\n\n      {!isLast && (\n        <Link className=\"next\" to={nextPage} rel=\"next\">\n          Next\n        </Link>\n      )}\n    </div>\n  );\n}\nexport default Pagination;","import React from 'react';\nimport { Link } from 'gatsby';\nimport { kebabCase } from '../../helpers';\nimport '../styles/components/tags.scss';\n\nfunction Tags ({ tags }) {\n  return (\n    <div className=\"tags\">\n      <h3 className=\"heading\">Categories:</h3>\n\n      <ul>\n        {tags.map(tag =>\n          <li key={kebabCase(tag)}>\n            <Link to={`/tags/${kebabCase(tag)}`} itemProp=\"url\">\n              <span itemProp=\"headline\">{tag}</span>\n            </Link>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n}\nexport default Tags;","import React from 'react';\nimport { Link } from 'gatsby';\n\nfunction Posts ({ postData }) {\n  return (\n    postData.map(post => {\n      const title = post.frontmatter.title || post.fields.slug;\n\n      return (\n        <article\n          key={post.fields.slug}\n          className=\"post-list-item\"\n          itemScope\n          itemType=\"http://schema.org/Article\"\n        >\n          <header>\n            <h2><Link to={post.fields.slug} itemProp=\"url\">{title}</Link></h2>\n            <small>{post.frontmatter.date}</small>\n          </header>\n\n          <section>\n            <p\n              dangerouslySetInnerHTML={{\n                __html: post.frontmatter.description || post.excerpt,\n              }}\n              itemProp=\"description\"\n            />\n          </section>\n\n        </article>\n      );\n    })\n  );\n}\nexport default Posts;"],"sourceRoot":""}