{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/pages/index.js","webpack:///./src/components/Posts.js"],"names":["Bio","author","useStaticQuery","site","siteMetadata","className","summary","current","pageQuery","BlogIndex","data","location","siteTitle","title","blog","nodes","projects","to","Posts","postData","map","post","frontmatter","fields","slug","key","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"wMAuCeA,G,UA5BH,WAAO,IAAD,EAgBVC,EAAM,UAfCC,YAAe,cAeRC,KAAKC,oBAAb,aAAG,EAAwBH,OAEvC,OACE,yBAAKI,UAAU,OACb,oCACE,4BAAIJ,aAAA,EAAAA,EAAQK,UAAW,MACvB,4BAAIL,aAAA,EAAAA,EAAQM,UAAW,U,oCCIlBC,G,UAFEC,UA3BG,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAEnBC,GAAY,UAAAF,EAAKP,KAAKC,oBAAV,eAAwBS,QAAS,QAC7CC,EAAOJ,EAAKI,KAAKC,MACjBC,EAAWN,EAAKM,SAASD,MAE/B,OACE,kBAAC,IAAD,CAAQJ,SAAUA,EAAUE,MAAOD,GACjC,kBAAC,IAAD,CAAKC,MAAM,SACX,kBAAC,EAAD,MACA,yBAAKR,UAAU,SAEb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,WAAU,kBAAC,IAAD,CAAMY,GAAG,SAAT,SACxB,kBAACC,EAAA,EAAD,CAAOC,SAAUL,KAGnB,yBAAKT,UAAU,sBACb,wBAAIA,UAAU,WAAU,kBAAC,IAAD,CAAMY,GAAG,kBAAT,aACxB,kBAACC,EAAA,EAAD,CAAOC,SAAUH,QAUL,e,kCCrCtB,qCAkCeE,IA/Bf,YACE,OAD4B,EAAZC,SAELC,KAAI,SAAAC,GACX,IAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KAEpD,OACE,6BACEC,IAAKJ,EAAKE,OAAOC,KACjBnB,UAAU,iBACVqB,WAAS,EACTC,SAAS,6BAET,gCACE,4BAAI,kBAAC,IAAD,CAAMV,GAAII,EAAKE,OAAOC,KAAMI,SAAS,OAAOf,IAChD,+BAAQQ,EAAKC,YAAYO,OAG3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQV,EAAKC,YAAYU,aAAeX,EAAKY,SAE/CL,SAAS,uB","file":"component---src-pages-index-js-e8156d2de4fd52e4d744.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport '../styles/components/bio.scss';\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n            current\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n\n  return (\n    <div className=\"bio\">\n      <>\n        <p>{author?.summary || null}</p>\n        <p>{author?.current || null}</p>\n      </>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Posts from '../components/Posts';\nimport '../styles/pages/index.scss';\n\nconst BlogIndex = ({ data, location }) => {\n\n  const siteTitle = data.site.siteMetadata?.title || 'Title';\n  const blog = data.blog.nodes;\n  const projects = data.projects.nodes;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Home\" />\n      <Bio />\n      <div className=\"posts\">\n\n        <div className=\"post-list blog\">\n          <h2 className=\"heading\"><Link to=\"/blog\">Blog</Link></h2>\n          <Posts postData={blog} />\n        </div>\n\n        <div className=\"post-list projects\">\n          <h2 className=\"heading\"><Link to=\"/tags/projects\">Projects</Link></h2>\n          <Posts postData={projects} />\n        </div>\n\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n\n    blog: allMarkdownRemark(\n      limit: 3\n      filter: {\n        isFuture: { eq: false }\n        frontmatter: { tags: { nin: [\"Projects\"] } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n\n    projects: allMarkdownRemark(\n      limit: 3\n      filter: { frontmatter: { tags: { in: [\"Projects\"] } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nfunction Posts ({ postData }) {\n  return (\n    postData.map(post => {\n      const title = post.frontmatter.title || post.fields.slug;\n\n      return (\n        <article\n          key={post.fields.slug}\n          className=\"post-list-item\"\n          itemScope\n          itemType=\"http://schema.org/Article\"\n        >\n          <header>\n            <h2><Link to={post.fields.slug} itemProp=\"url\">{title}</Link></h2>\n            <small>{post.frontmatter.date}</small>\n          </header>\n\n          <section>\n            <p\n              dangerouslySetInnerHTML={{\n                __html: post.frontmatter.description || post.excerpt,\n              }}\n              itemProp=\"description\"\n            />\n          </section>\n\n        </article>\n      );\n    })\n  );\n}\nexport default Posts;"],"sourceRoot":""}